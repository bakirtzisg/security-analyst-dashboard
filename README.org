/This software is no longer maintained and there are no plans for a future release./
Having said that the basic principles of the software herein and on the cited papers below are still relevant to model-based security
and the software /should/ run given that the user installs the versions of dependent software stated below.

#+html: <p align="center"><img src=".github/logo.png" width="460" /></p>bakirtzisg/security-analyst-dashboard
#+html: <p align="center"><strong>Security Analyst Dashboard.</strong> A dashboard for cyber-physical system design and analysis.</p>

** About the papers

  Georgios Bakirtzis, Brandon Simon, Cody Fleming, and Carl Elks,
  "Looking for a Black Cat in a Dark Room: Security Visualization
  for Cyber-Physical System Design and Analysis," [[https://vizsec.org/vizsec2018/][IEEE VizSec 2018]]
  [[[https://ieeexplore.ieee.org/document/8709187][proceedings]], [[https://arxiv.org/abs/1808.08081][preprint]], [[https://vimeo.com/308133381][talk]]]

  /Rationale/. Georgios Bakirtzis, Garrett Ward, Christopher Deloglos, Carl Elks, Barry Horowitz, 
  and Cody Fleming, "Fundamental Challenges of Cyber-Physical Systems Security Modeling" [[https://dsn2020.webs.upv.es/][IEEE/IFIP DSN 2020]]
  [[[https://ieeexplore.ieee.org/document/9159140][proceedings]], [[https://arxiv.org/abs/2005.00043][preprint]]]
  
** Getting Started

   The dashboard works in conjunction with [[https://github.com/bakirtzisg/cybok-cli][cybok-cli]]
   & [[https://github.com/bakirtzisg/graphml_export][graphml_export]]---which produce the data requirements for this project.

** Prerequisites

   The following are required to run the dashboard:
   Java JDK 8, Python >=3.6.4 and the rest
   of [[https://github.com/bakirtzisg/cybok-cli][cybok-cli]]'s prerequisites.

** Building and Running

   The following script will automatically initialize
   the =cybok-cli= submodule, compile the code if needed,
   and start the security analyst dashboard.

   Windows:
   #+BEGIN_SRC bash
   $./build_and_run.bat
   #+END_SRC

   GNU/Linux or macOS:
   #+BEGIN_SRC bash
   $./build_and_run.sh
   #+END_SRC

** Usage

   Once running the dashboard first checks two things: (1) that a correct version
   of python is installed and (2) that a correct installation of =cybok-cli= exists
   within the repo.
   In the event that either of those checks fail, the dashboard will terminate.

   At first launch, the user is prompt to update the data requirements
   of =cybok-cli=.
   If the data does not exist, it populates the correct structures
   within =cybok-cli=.
   (Unfortunately both these actions take some time at the moment, please be patient.)
   Without this step the dashboard will not operate properly.

*** Accepted Models

    The dashboard is agnostic to modeling tool as long as a GraphML file is provided.
    There are two types of models that input into the dashboard: (1) system topology graph
    and (2) specification graph.
    The specification is optional; that is, only the system topology graph is necessary.

    For the system topology graph model you can look at this paper:

    Georgios Bakirtzis, Bryan T. Carter, Carl R. Elks, and Cody H. Fleming,
    "A Model-Based Approach to Security Analysis for Cyber-Physical Systems,"
    [[http://2018.ieeesyscon.org/][IEEE SysCon 2018]] [[[https://arxiv.org/abs/1710.11442][preprint]], [[https://ieeexplore.ieee.org/abstract/document/8369518][proceedings]]]

    Briefly the following schema is used for the system topology:

    | Attribute        | Description                                   |
    |------------------+-----------------------------------------------|
    | Entry Points     | How external devices interact with the system |
    | Software         | What software the vertex uses                 |
    | Firmware         | What firmware the vertex uses                 |
    | Operating System | What operating system the vertex uses         |
    | Device           | The device name that the vertex is            |
    | Communication    | What protocol is used in an edge              |

    and this one for the specification graph

    | Attribute   | Description                                          |
    |-------------+------------------------------------------------------|
    | Type        | Type of requirement; Structure, Mission, or Function |
    | Description | Description of the requirement                       |

    For specifics on writing such GraphML files you can look in the =data= folder.

*** Toolbar options

    | Button            | Description                                                                                |
    |-------------------+--------------------------------------------------------------------------------------------|
    | =Load Topology=   | File loading dialog to select the topology and (optionally) the system specification file  |
    | =Attack Surfaces= | Toggles the visibility of attack surfaces on the topology graph                            |
    | =Analysis=        | Performs the Attack Vector analysis on the topology graph using =cybok-cli=                |
    | =Show Deleted=    | Toggles the visibility of deleted attack vectors in the attack vector space and tree views |
    | =Show Hidden=     | Toggles the visibility of hidden attack vectors in the attack vector space and tree views  |
    | =Show CVE=        | Toggles the visibility of CVE attack vectors in the attack vector space and tree views     |
    | =Add to Bucket=   | Adds all the selected attack vectors to the bucket                                         |
    | =Delete Attacks=  | Deletes all the selected attack vectors                                                    |

*** Key bindings

    | Command  | Description                                                                          |
    |----------+--------------------------------------------------------------------------------------|
    | =CTRL+S= | save node positions of the selected graph to a file                                  |
    | =CTRL+L= | load node positions of the selected graph from file                                  |
    | =CTRL+E= | exports the selected graph as a .graphml file                                        |
    | =CTRL+F= | freeze/unfreeze auto layout                                                          |
    | =CTRL+G= | (attack vector space)  grows the current selection (selects the nodes related to it) |
    | =CTRL+B= | (attack vector space) adds the selected nodes to the bucket                          |
    | =CTRL+I= | (attack vector space) opens a panel with additional information of the selected node |
    | =CTRL+A= | (bucket) selects all visible nodes                                                   |
    | =DEL=    | deselects the current selection                                                      |
    | =DEL=    | (bucket) removes all checked entries from the bucket                                 |

** Screenshot

#+html: <p align="left"><img src=".github/screenshot.png" width="690" /></p>

** Authors

   Georgios Bakirtzis (bakirtzis@virginia.edu) [[http://bakirtzis.net][bakirtzis.net]] \\
   Brandon Simon (simonbj@vcu.edu)

